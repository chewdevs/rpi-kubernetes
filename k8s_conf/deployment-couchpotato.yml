kind: Service
apiVersion: v1
metadata:
  name: couchpotato
spec:
  selector:
    app: couchpotato
  ports:
  - protocol: TCP
    port: 5050
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: couchpotato
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: couchpotato.local
    http:
      paths:
      - path: /
        backend:
          serviceName: couchpotato
          servicePort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchpotato
  labels:
    app: couchpotato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchpotato
  template:
    metadata:
      labels:
        app: couchpotato
    spec:
      containers:
      - name: transmission
        image: lsioarmhf/couchpotato
        ports:
        - containerPort: 5050
        volumeMounts:
        - mountPath: /config
          name: couchpotato-config
        - mountPath: /config/config.ini
          name: couchpotato-config-files
          subPath: config.ini
        - mountPath: /downloads
          name: downloads
        - mountPath: /movies
          name: nfs-movies
        env:
          - name: PGID
            value: "1000"
          - name: PUID
            value: "1000"
      volumes:
      - name: couchpotato-config-files
        configMap:
          name: couchpotato-config
      - name: couchpotato-config
        persistentVolumeClaim:
          claimName: couchpotato-config
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads
      - name: nfs-movies
        persistentVolumeClaim:
          claimName: nfs-movies
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: couchpotato-backup
spec:
  schedule: "0 1 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: couchpotato-backup
            image: alpine
            command: ["cp",  "-r", "/config/data/database", "/backup/rpi-k8s/couchpotato"]
            volumeMounts:
            - mountPath: /config
              name: couchpotato-config
              readOnly: true
            - mountPath: /backup
              name: nfs-backup
          restartPolicy: Never
          volumes:
          - name: couchpotato-config
            persistentVolumeClaim:
              claimName: couchpotato-config
          - name: nfs-backup
            persistentVolumeClaim:
              claimName: nfs-backup
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: couchpotato-config
    annotations:
        volume.beta.kubernetes.io/storage-class: glusterfs-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-movies
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 10Mi
